name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Cache node modules
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with: 
            node-version: 18
        
        - name: Cache node modules
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
        
        - name: Install Dependencies
          run: npm install

        - name: Run Code Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Results
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Results
            path: coverage
            retention-days: 5
          
    containerization:
          name: dockerlogin
          runs-on: ubuntu-latest
          needs: [unit-testing, code-coverage]
          steps:
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Docker Build for Testing
            uses: docker/build-push-action@v6
            with:
              context: .
              push: false
              tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha}}

          - name: Docker Image Testing
            run: |
              docker images
              docker run --name solar-system-app -d \
                  -p 3000:3000 \
                  -e MONGO_URI=$MONGO_URI \
                  -e MONGO_USERNAME=$MONGO_USERNAME \
                  -e MONGO_PASSWORD=$MONGO_PASSWORD \
                  ${{ env.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              
              export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo Testing Image URI using wget
              wget -q -O 127.0.0.1:3000/live | grep live